/*
 * Gitea API.
 *
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.19.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// ExternalTracker : ExternalTracker represents settings for external tracker



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ExternalTracker {
    /// External Issue Tracker URL Format. Use the placeholders {user}, {repo} and {index} for the username, repository name and issue index.
    #[serde(rename = "external_tracker_format", skip_serializing_if = "Option::is_none")]
    pub external_tracker_format: Option<String>,
    /// External Issue Tracker issue regular expression
    #[serde(rename = "external_tracker_regexp_pattern", skip_serializing_if = "Option::is_none")]
    pub external_tracker_regexp_pattern: Option<String>,
    /// External Issue Tracker Number Format, either `numeric`, `alphanumeric`, or `regexp`
    #[serde(rename = "external_tracker_style", skip_serializing_if = "Option::is_none")]
    pub external_tracker_style: Option<String>,
    /// URL of external issue tracker.
    #[serde(rename = "external_tracker_url", skip_serializing_if = "Option::is_none")]
    pub external_tracker_url: Option<String>,
}

impl ExternalTracker {
    /// ExternalTracker represents settings for external tracker
    pub fn new() -> ExternalTracker {
        ExternalTracker {
            external_tracker_format: None,
            external_tracker_regexp_pattern: None,
            external_tracker_style: None,
            external_tracker_url: None,
        }
    }
}


