/*
 * Gitea API.
 *
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.19.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// CombinedStatus : CombinedStatus holds the combined state of several statuses for a single commit



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CombinedStatus {
    #[serde(rename = "commit_url", skip_serializing_if = "Option::is_none")]
    pub commit_url: Option<String>,
    #[serde(rename = "repository", skip_serializing_if = "Option::is_none")]
    pub repository: Option<Box<crate::models::Repository>>,
    #[serde(rename = "sha", skip_serializing_if = "Option::is_none")]
    pub sha: Option<String>,
    /// CommitStatusState holds the state of a CommitStatus It can be \"pending\", \"success\", \"error\", \"failure\", and \"warning\"
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<String>,
    #[serde(rename = "statuses", skip_serializing_if = "Option::is_none")]
    pub statuses: Option<Vec<crate::models::CommitStatus>>,
    #[serde(rename = "total_count", skip_serializing_if = "Option::is_none")]
    pub total_count: Option<i64>,
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
}

impl CombinedStatus {
    /// CombinedStatus holds the combined state of several statuses for a single commit
    pub fn new() -> CombinedStatus {
        CombinedStatus {
            commit_url: None,
            repository: None,
            sha: None,
            state: None,
            statuses: None,
            total_count: None,
            url: None,
        }
    }
}


