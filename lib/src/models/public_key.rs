/*
 * Gitea API.
 *
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.19.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// PublicKey : PublicKey publickey is a user key to push code to repository



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct PublicKey {
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    #[serde(rename = "fingerprint", skip_serializing_if = "Option::is_none")]
    pub fingerprint: Option<String>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i64>,
    #[serde(rename = "key", skip_serializing_if = "Option::is_none")]
    pub key: Option<String>,
    #[serde(rename = "key_type", skip_serializing_if = "Option::is_none")]
    pub key_type: Option<String>,
    #[serde(rename = "read_only", skip_serializing_if = "Option::is_none")]
    pub read_only: Option<bool>,
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    #[serde(rename = "user", skip_serializing_if = "Option::is_none")]
    pub user: Option<Box<crate::models::User>>,
}

impl PublicKey {
    /// PublicKey publickey is a user key to push code to repository
    pub fn new() -> PublicKey {
        PublicKey {
            created_at: None,
            fingerprint: None,
            id: None,
            key: None,
            key_type: None,
            read_only: None,
            title: None,
            url: None,
            user: None,
        }
    }
}


